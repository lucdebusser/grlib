library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity display_ram is
   port(
      clk: in std_logic;
      addr_a: in std_logic_vector(11 downto 0);
      din_a: in std_logic_vector(7 downto 0)
      we : in std_logic;
      addr_b: in std_logic_vector(11 downto 0);
      dout_b: out std_logic_vector(7 downto 0)
   );
end display_ram;

architecture arch of display_ram is
   constant ADDR_WIDTH: integer:=12;
   constant DATA_WIDTH: integer:=8;
   signal addr_reg: std_logic_vector(ADDR_WIDTH-1 downto 0);
   type ram_type is array (0 to 2**ADDR_WIDTH-1)
        of std_logic_vector(DATA_WIDTH-1 downto 0);
   -- RAM definition
   signal RAM: ram_type;

begin
   -- addr register to infer block RAM
   process (clk)
   begin
      if (clk'event and clk = '1') then
        addr_reg <= addr;
      end if;
   end process;
   data <= RAM(to_integer(unsigned(addr_reg)));
end arch;
